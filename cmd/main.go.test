// -*- Mode: Go -*-

package main

import (
	"flag"
	"fmt"
	"os"
	"path/filepath"
	"strings"
	"testing"
	"time"
)

var exit int

func TestMain(m *testing.M) {
	var flags []string
	if str, ok := os.LookupEnv("HOLO_TEST_FLAGS"); ok {
		flags = append(flags, strings.Split(str, " ")...)
	}
	if dir := os.Getenv("HOLO_TEST_COVERDIR"); dir != "" {
		coverfile := fmt.Sprintf("%s.%d.%d.cov", filepath.Base(os.Args[0]), os.Getpid(), time.Now().UnixNano())
		flags = append(flags, "-test.coverprofile", filepath.Join(dir, coverfile))
	}

	flag.CommandLine.Parse(flags)
	_ = m.Run()
	os.Exit(exit)
}

func TestSystem(t *testing.T) {
	exit = Main()
	_ = os.Stdout.Close()
}
